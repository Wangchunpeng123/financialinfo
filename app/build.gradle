apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.0"

    compileOptions {//指定Java的版本
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "com.yongyi.financialinfo"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        Properties properties = new Properties()
        properties.load(rootProject.file('key.properties').newDataInputStream())
        signingConfigs {
            release {
                storeFile file(properties.get('storeFile'))
                storePassword properties.get('password')
                keyAlias properties.get('alias')
                keyPassword properties.get('aliasPassword')
            }
        }

        
        applicationId "com.kc.bq" //JPush 上注册的包名.
        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "cb0fe4b3676d2c22a9de8a0d", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            shrinkResources false
            minifyEnabled false
            zipAlignEnabled false
            signingConfig signingConfigs.release
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            variant.getPackageApplication().outputDirectory = new File(project.rootDir.absolutePath + "/app/build/outputs/apks")
            outputFileName = "${variant.productFlavors[0].name}_${variant.productFlavors[1].name}_${variant.versionName}_${buildType.name}.apk"
        }
    }

    flavorDimensions 'app', 'channel'
    productFlavors {
        kcbq{//矿池币区策略
            dimension 'app'
            versionCode 1
            versionName "1.0.0"
            applicationId "com.kc.bq"
            ndk{
                //选择要添加的对应 cpu 类型的 .so 库。
                abiFilters 'armeabi', 'armeabi-v7a', 'x86', 'x86_64', 'mips', 'mips64', 'arm64-v8a'
            }
            manifestPlaceholders = [
                    JPUSH_PKGNAME : "com.kc.bq",//
                    JPUSH_APPKEY : "cb0fe4b3676d2c22a9de8a0d", // NOTE: JPush 上注册的包名对应的 Appkey.
                    JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.1
            ]
        }
        hw {
            dimension 'channel'
            buildConfigField('String', 'name', '\"kcbqhw\"')
            buildConfigField('String', 'platform', '\"YX\"')
        }
//        xm {
//            dimension 'channel'
//            buildConfigField('String', 'name', '\"kcbqxm\"')
//            buildConfigField('String', 'platform', '\"YX\"')
//        }
//        tencent {
//            dimension 'channel'
//            buildConfigField('String', 'name', '\"kcbqyyb\"')
//            buildConfigField('String', 'platform', '\"YX\"')
//        }
//        q360{
//            dimension 'channel'
//            buildConfigField('String', 'name', '\"kcbqqh360\"')
//            buildConfigField('String', 'platform', '\"YX\"')
//        }
//        oppo{
//            dimension 'channel'
//            buildConfigField('String', 'name', '\"kcbqoppo\"')
//            buildConfigField('String', 'platform', '\"YX\"')
//        }
//        mz{
//            dimension 'channel'
//            buildConfigField('String', 'name', '\"kcbqmz\"')
//            buildConfigField('String', 'platform', '\"YX\"')
//        }
//        baidu{
//            dimension 'channel'
//            buildConfigField('String', 'name', '\"kcbqbd\"')
//            buildConfigField('String', 'platform', '\"YX\"')
//        }
//        sougou{
//            dimension 'channel'
//            buildConfigField('String', 'name', '\"kcbqsg\"')
//            buildConfigField('String', 'platform', '\"YX\"')
//        }
//        samsung{
//            dimension 'channel'
//            buildConfigField('String', 'name', '\"kcbqsx\"')
//            buildConfigField('String', 'platform', '\"YX\"')
//        }
//        lenovo{
//            dimension 'channel'
//            buildConfigField('String', 'name', '\"kcbqlx\"')
//            buildConfigField('String', 'platform', '\"YX\"')
//        }


    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.navigation:navigation-fragment:2.2.2'
    implementation 'androidx.navigation:navigation-ui:2.2.2'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    // 图片glide
    implementation group: 'com.github.bumptech.glide', name: 'glide', version: '4.8.0'
    // 网络okhttp
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.11.0'
    // json解析gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    //控件绑定ButterKnife
    implementation "com.jakewharton:butterknife:10.1.0"
    annotationProcessor "com.jakewharton:butterknife-compiler:10.1.0"
    //recyclerview
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha03'
    // 申请权限
    implementation 'com.github.githubZYQ:easypermission:v1.0.0'
    //viewpager2设置主界面
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    //Retrofit依赖
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    //配合Retrofit解析json字符所用
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    //使用jetpack组件中的ViewModel
    implementation "androidx.lifecycle:lifecycle-extensions:2.0.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel:2.0.0"
    // 图片picasso
    implementation 'com.squareup.picasso:picasso:2.5.2'
    //头像 图片
    implementation 'com.makeramen:roundedimageview:2.2.1'
    //图片轮播器
    implementation 'com.youth.banner:banner:1.4.9'
    //解密
    implementation "org.bouncycastle:bcprov-jdk15on:1.56"
    //极光推送
    implementation 'cn.jiguang.sdk:jpush:3.1.6'  // 此处以JPush 3.1.6 版本为例。
    implementation 'cn.jiguang.sdk:jcore:1.2.5'  // 此处以JCore 1.2.5 版本为例。

}
